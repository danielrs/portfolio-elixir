{"version":3,"sources":["dist/typing.js"],"names":[],"mappingsnPA;AAAA","file":"dist/typing.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  var globals = typeof window === 'undefined' ? global : window;\n  if (typeof globals.require === 'function') return;\n\n  var modules = {};\n  var cache = {};\n  var aliases = {};\n  var has = ({}).hasOwnProperty;\n\n  var endsWith = function(str, suffix) {\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n  };\n\n  var _cmp = 'components/';\n  var unalias = function(alias, loaderPath) {\n    var start = 0;\n    if (loaderPath) {\n      if (loaderPath.indexOf(_cmp) === 0) {\n        start = _cmp.length;\n      }\n      if (loaderPath.indexOf('/', start) > 0) {\n        loaderPath = loaderPath.substring(start, loaderPath.indexOf('/', start));\n      }\n    }\n    var result = aliases[alias + '/index.js'] || aliases[loaderPath + '/deps/' + alias + '/index.js'];\n    if (result) {\n      return _cmp + result.substring(0, result.length - '.js'.length);\n    }\n    return alias;\n  };\n\n  var _reg = /^\\.\\.?(\\/|$)/;\n  var expand = function(root, name) {\n    var results = [], part;\n    var parts = (_reg.test(name) ? root + '/' + name : name).split('/');\n    for (var i = 0, length = parts.length; i < length; i++) {\n      part = parts[i];\n      if (part === '..') {\n        results.pop();\n      } else if (part !== '.' && part !== '') {\n        results.push(part);\n      }\n    }\n    return results.join('/');\n  };\n\n  var dirname = function(path) {\n    return path.split('/').slice(0, -1).join('/');\n  };\n\n  var localRequire = function(path) {\n    return function expanded(name) {\n      var absolute = expand(dirname(path), name);\n      return globals.require(absolute, path);\n    };\n  };\n\n  var initModule = function(name, definition) {\n    var module = {id: name, exports: {}};\n    cache[name] = module;\n    definition(module.exports, localRequire(name), module);\n    return module.exports;\n  };\n\n  var require = function(name, loaderPath) {\n    var path = expand(name, '.');\n    if (loaderPath == null) loaderPath = '/';\n    path = unalias(name, loaderPath);\n\n    if (has.call(cache, path)) return cache[path].exports;\n    if (has.call(modules, path)) return initModule(path, modules[path]);\n\n    var dirIndex = expand(path, './index');\n    if (has.call(cache, dirIndex)) return cache[dirIndex].exports;\n    if (has.call(modules, dirIndex)) return initModule(dirIndex, modules[dirIndex]);\n\n    throw new Error('Cannot find module \"' + name + '\" from '+ '\"' + loaderPath + '\"');\n  };\n\n  require.alias = function(from, to) {\n    aliases[to] = from;\n  };\n\n  require.register = require.define = function(bundle, fn) {\n    if (typeof bundle === 'object') {\n      for (var key in bundle) {\n        if (has.call(bundle, key)) {\n          modules[key] = bundle[key];\n        }\n      }\n    } else {\n      modules[bundle] = fn;\n    }\n  };\n\n  require.list = function() {\n    var result = [];\n    for (var item in modules) {\n      if (has.call(modules, item)) {\n        result.push(item);\n      }\n    }\n    return result;\n  };\n\n  require.brunch = true;\n  require._cache = cache;\n  globals.require = require;\n})();\nrequire.register(\"src/typing\", function(exports, require, module) {\n(function($) {\n\n\t//\n\t// Utility functions\n\t//\n\n\t// Checks if the given object is a function. Taken from underscorejs source code\n\tfunction isFunction(obj) {\n\t\treturn !!(obj && obj.constructor && obj.call && obj.apply);\n\t}\n\n\t// Checks if the given object is an array.\n\tfunction isArray(obj) {\n\t\treturn toString(obj) === \"[object Array]\";\n\t}\n\n\t// Returns the same array except from the first element\n\tfunction tail(array) {\n\t\treturn array.slice(1);\n\t}\n\n\t// Returns the first element of the array\n\tfunction head(array) {\n\t\treturn array[0];\n\t}\n\n\t// Drops the given number of characters from the end of the string\n\tfunction dropTail(string, n) {\n\t\treturn string.substr(0, string.length - n);\n\t}\n\n\t// Takes a value and a noise value, returns the origin value noised over the specified noise range\n\t// E.g. noise(x, 2) = x - 2 <= y <= x + 2\n\tfunction noise(x, delta) {\n\t\treturn Math.round(Math.random() * delta * 2 - delta) + x;\n\t}\n\n\t// Returns a new string, 1 edit distance from current and closer to target\n\tfunction typeTo(current, target) {\n\t\tif (current !== target) {\n\t\t\tvar subTarget = target.substr(0, current.length);\n\t\t\tif (current !== subTarget) return dropTail(current, 1);\n\t\t\telse return current + target.charAt(current.length);\n\t\t}\n\t\treturn current;\n\t}\n\n\t//\n\t// Typying.js function\n\t//\n\n\t$.fn.typing = function(options) {\n\n\t\t// SETTINGS\n\t\tvar settings = {\n\t\t\tsentences: ['Hello', 'Try your own sentences!', 'Don\\'t be lazy'],\n\t\t\tcaretChar: '_',\n\t\t\tcaretClass: 'typingjs__caret',\n\t\t\tignoreContent: false,\n\t\t\ttypeDelay: 50,\n\t\t\tsentenceDelay: 750,\n\t\t\thumanize: true,\n\t\t\tonType: undefined,\n\t\t\tonBackspace: undefined,\n\t\t\tonFinish: undefined,\n\t\t\tonSentenceFinish: undefined\n\t\t};\n\t\t$.extend(settings, options);\n\n\t\treturn this.each(function() {\n\n\t\t\t// Sets up element\n\t\t\tvar this_ = $(this);\n\t\t\tvar text = '';\n\t\t\tif (!settings.ignoreContent) {\n\t\t\t\ttext = this_.text();\n\t\t\t\tif (this_.children('.typingjs__content').length > 0)\n\t\t\t\t\ttext = this_.children('.typingjs__content').text();\n\t\t\t}\n\n\t\t\tvar $content = $('<span>', { class: 'typingjs__content', text: text});\n\t\t\tvar $caret = $('<span>', { class: settings.caretClass, text: settings.caretChar });\n\n\t\t\tthis_.empty();\n\t\t\tthis_.append($content);\n\t\t\tthis_.append($caret);\n\n\t\t\t// Variable for sentences state\n\t\t\tvar sentencesLeft = settings.sentences;\n\n\t\t\tfunction typeSentence(currentStr, targetStr) {\n\t\t\t\tif (currentStr !== targetStr) {\n\t\t\t\t\tvar newStr = typeTo(currentStr, targetStr);\n\t\t\t\t\t// Step callback\n\t\t\t\t\tif (newStr.length > currentStr.length && isFunction(settings.onType)) {\n\t\t\t\t\t\tsettings.onType.call(this_);\n\t\t\t\t\t} else if (newStr.length < currentStr.length && isFunction(settings.onBackspace)) {\n\t\t\t\t\t\tsettings.onBackspace.call(this_)\n\t\t\t\t\t}\n\t\t\t\t\t// Update content\n\t\t\t\t\t$content.text(newStr);\n\t\t\t\t\t// Next step\n\t\t\t\t\tvar humanTimeout = settings.typeDelay;\n\t\t\t\t\tif (settings.humanize) humanTimeout = noise(settings.typeDelay, settings.typeDelay / 2);\n\t\t\t\t\tsetTimeout(typeSentence, humanTimeout, newStr, targetStr);\n\t\t\t\t} else {\n\t\t\t\t\tif (isFunction(settings.onSentenceFinish))\n\t\t\t\t\t\tsettings.onSentenceFinish.call(this_);\n\t\t\t\t\ttypeArray();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction typeArray() {\n\t\t\t\tvar targetStr = head(sentencesLeft);\n\t\t\t\tsentencesLeft = tail(sentencesLeft);\n\t\t\t\tif (targetStr !== undefined) {\n\t\t\t\t\tsetTimeout(typeSentence, settings.sentenceDelay, $content.text(), targetStr);\n\t\t\t\t}\n\t\t\t\telse if (isFunction(settings.onFinish)) {\n\t\t\t\t\tsettings.onFinish.call(this_);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttypeArray();\n\n\t\t}); // each\n\t}; // function typing\n})(jQuery);\n\n});\n\n\n//# sourceMappingURL=typing.js.map"]}